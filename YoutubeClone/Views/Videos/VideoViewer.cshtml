@model YoutubeClone.Models.Data_Models.Video

@{
    ViewBag.Title = Model.Name;
}

<h2>@Html.DisplayFor(model => model.Name)</h2>

<div>
    <hr />
    @if (!String.IsNullOrEmpty(Model.VideoPath))
    {
        <video controls src="@Model.VideoPath" poster="@Model.ThumbnailPath"></video>
    } else
    {
        <video controls src="https://ak5.picdn.net/shutterstock/videos/5770835/preview/stock-footage-the-decorated-archway-and-red-lanterns-in-the-snow.webm" poster="https://i.imgur.com/DS2bwux.png"></video>
    }
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Channel.Name)
        </dt>

        <dd>
            <a href="~/Channel/Details/@(Model.Channel.ChaineId)">
                @Html.DisplayFor(model => model.Channel.Name)
            </a>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Views)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Views)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Categorie_Video)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Categorie_Video)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DatePublished)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DatePublished)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Tags_Video)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Tags_Video)
        </dd>
        @if (User.Identity.IsAuthenticated && ViewBag.EditOK) {
            <dd>
                <a href="/Videos/Edit/@Model.VideoId" class="btn btn-default">Edit Video </a>
            </dd>
        }

    </dl>
</div>
<div>
    @if (User.Identity.IsAuthenticated)
    {
        using (Html.BeginForm("Create", "Commentaires"))
        {
            var commentaire = new YoutubeClone.Models.Data_Models.Commentaire();

            @Html.AntiForgeryToken()

            <div class="form-horizontal row" style="min-width:1140px">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group col-md-11">
                    <div class="col-md-10">
                        @Html.TextAreaFor(m => commentaire.Contenu, new { style = "resize: none; width: 1040px; padding:5px", placeholder = "Commentaire sur la vidéo", rows = 3, id = "commentaire", onkeyup = "verifier()", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => commentaire.Contenu, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-1">
                    <div class="col-md-offset-2 col-md-3">
                        <input type="hidden" name="Chaine_FK" value="@Model.Chaine_FK" />
                        <input type="hidden" name="Video_FK" value="@Model.VideoId" />
                        <input type="submit" value="Poster" id="btnPoster" class="btn btn-default" style="height:70px; width:115px" disabled />
                    </div>
                </div>
            </div>
        }
    } else
    {
        <h3>
            @Html.ActionLink("Se connecter", "Login", "Auth", new { ReturnUrl = Request.Url }, null) pour poster un commentaire.
        </h3>
    }
    @if (Model.Commentaires.Count() == 0)
    {
        <h3>Aucun commentaire n'a été posté sur cette vidéo.</h3>
    }
    else
    {
        foreach(var item in Model.Commentaires)
        {
            <div>
                <div style="display:inline-block">
                    <div>
                        <h4>@item.Auteur.Username - @item.DatePublication</h4>
                    </div>
                    <div>
                        <h5>@item.Contenu</h5>
                    </div>
                    @if (User.Identity.IsAuthenticated && ((Model.Channel.Utilisateur.Username == User.Identity.Name) || (ViewBag.User.IsAdmin == true)))
                    {
                        <div>
                            @Html.ActionLink("Supprimer", "Delete", "Commentaires", new { id = item.CommentaireId }, new { @class = "btn btn-default" })
                        </div>
                    }
                </div>
            </div>
            <hr/>
        }
    }
</div>

<script src="~/Scripts/script.js"></script>